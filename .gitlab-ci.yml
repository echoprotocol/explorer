stages:
  - build
  - deploy


build.develop:
  stage: build
  variables:
    NODE_ENV: production
    NODE_APP_INSTANCE: develop
    CI_FULL_REGISTRY: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  script:
    - docker build --cache-from $CI_FULL_REGISTRY --build-arg NODE_APP_INSTANCE=${NODE_APP_INSTANCE} -t $CI_FULL_REGISTRY .
    - docker-compose -p 656-echo-explorer up -d
  only:
    - develop
  tags:
    - pp-develop
  environment:
    name: develop
    url: https://656-echo-explorer.pixelplex-test.by


build.master:
  stage: build
  variables:
    NODE_ENV: production
    NODE_APP_INSTANCE: master
    CI_FULL_REGISTRY: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  script:
    - docker build --cache-from $CI_FULL_REGISTRY --build-arg NODE_APP_INSTANCE=${NODE_APP_INSTANCE} -t $CI_FULL_REGISTRY .
    - docker-compose -p 656-echo-explorer up -d
  only:
    - master
  tags:
    - pp-stage
  environment:
    name: master
    url: http://656-echo-explorer.pixelplexlabs.com


build.production:
  stage: build
  variables:
    NODE_ENV: production
    NODE_APP_INSTANCE: production
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --build-arg NODE_APP_INSTANCE=${NODE_APP_INSTANCE} --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  after_script:
    - docker logout $CI_REGISTRY
  only:
    - tags
  tags:
    - echo-linux
  environment:
    name: production
    url: https://explorer.echo-dev.io


deploy.production:
  stage: deploy
  variables:
    NODE_ENV: production
    NODE_APP_INSTANCE: production
    CI_FULL_REGISTRY: $CI_REGISTRY_IMAGE:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker-compose up -d
  after_script:
    - docker logout $CI_REGISTRY
  only:
    - tags
  tags:
    - echo-explorer-1
  when: manual
  environment:
    name: production
    url: https://explorer.echo-dev.io
